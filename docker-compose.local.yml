version: "3.8"

volumes:
  postgres-data:

networks:
  pg-network:
    driver: bridge

services:
  app:
    container_name: stori-email-worker
    build:
      context: ./
      dockerfile: Dockerfile
    tty: true
    stdin_open: true
    env_file:
      - .env
    environment:
      - DB_HOST=postgresql
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pg-network
    command: python ./start.py

  db:
    container_name: postgresql
    image: postgres:13
    ports:
      - 5432:5432
    env_file:
      - .env
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - pg-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./database/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql